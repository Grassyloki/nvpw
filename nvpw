#!/bin/bash

# NVIDIA GPU Power Wrapper (nvpw)
# Usage: nvpw [on|off]

# GPU PCI address - modify this if your GPU has a different address
GPU_ADDRESS="0000:01:00.0"

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# Function to print colored messages
print_status() {
    local status=$1
    local message=$2
    case $status in
        "success")
            echo -e "${GREEN}✓${NC} ${message}"
            ;;
        "error")
            echo -e "${RED}✗${NC} ${message}"
            ;;
        "info")
            echo -e "${BLUE}ℹ${NC} ${message}"
            ;;
        "warning")
            echo -e "${YELLOW}⚠${NC} ${message}"
            ;;
    esac
}

# Function to check if GPU is on
check_gpu_status() {
    if nvidia-smi &>/dev/null; then
        return 0  # GPU is on
    else
        return 1  # GPU is off
    fi
}

# Function to display GPU status
show_status() {
    echo -e "${BOLD}${CYAN}=== NVIDIA GPU Status ===${NC}"
    echo -e "${PURPLE}GPU Address:${NC} $GPU_ADDRESS"
    
    if check_gpu_status; then
        echo -e "${GREEN}${BOLD}Status: ON${NC}"
        echo ""
        # Show GPU info
        nvidia-smi --query-gpu=name,temperature.gpu,power.draw,memory.used,memory.total --format=csv,noheader,nounits | while IFS=',' read -r name temp power mem_used mem_total; do
            echo -e "${CYAN}GPU:${NC} $name"
            echo -e "${YELLOW}Temperature:${NC} ${temp}°C"
            echo -e "${YELLOW}Power Draw:${NC} ${power}W"
            echo -e "${YELLOW}Memory:${NC} ${mem_used}MB / ${mem_total}MB"
        done
    else
        echo -e "${RED}${BOLD}Status: OFF${NC}"
        echo -e "${BLUE}No devices found${NC}"
    fi
}

# Function to show explainer and status
show_explainer() {
    echo -e "${BOLD}${PURPLE}╔═══════════════════════════════════════════════════════════╗${NC}"
    echo -e "${BOLD}${PURPLE}║             NVIDIA Power Wrapper (nvpw)                   ║${NC}"
    echo -e "${BOLD}${PURPLE}╚═══════════════════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${CYAN}${BOLD}What is this?${NC}"
    echo -e "This script provides easy control over your NVIDIA GPU power state."
    echo -e "You can turn your GPU on or off to save power when not in use."
    echo ""
    echo -e "${YELLOW}${BOLD}How to use:${NC}"
    echo -e "  ${GREEN}./nvpw on${NC}   - Turn the GPU on"
    echo -e "  ${GREEN}./nvpw off${NC}  - Turn the GPU off"
    echo -e "  ${GREEN}./nvpw${NC}      - Show this help and current status"
    echo ""
    echo -e "${BLUE}${BOLD}Why use this?${NC}"
    echo -e "• Save battery life on laptops by disabling GPU when not needed"
    echo -e "• Reduce power consumption and heat generation"
    echo -e "• Quick toggle for gaming/work sessions"
    echo ""
    echo -e "${PURPLE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    show_status
}

# Function to turn GPU on
turn_on() {
    echo -e "${BOLD}${CYAN}=== Turning GPU ON ===${NC}"
    
    if check_gpu_status; then
        print_status "warning" "GPU is already ON"
        return 0
    fi
    
    print_status "info" "Enabling GPU at $GPU_ADDRESS..."
    
    if sudo nvidia-smi drain -p "$GPU_ADDRESS" -m 0 2>/dev/null; then
        sleep 2  # Give the GPU time to initialize
        if check_gpu_status; then
            print_status "success" "GPU successfully turned ON"
            echo ""
            show_status
        else
            print_status "error" "Failed to turn on GPU"
            return 1
        fi
    else
        print_status "error" "Failed to execute drain command"
        return 1
    fi
}

# Function to turn GPU off
turn_off() {
    echo -e "${BOLD}${CYAN}=== Turning GPU OFF ===${NC}"
    
    if ! check_gpu_status; then
        print_status "warning" "GPU is already OFF"
        return 0
    fi
    
    print_status "info" "Setting persistence mode..."
    if ! sudo nvidia-smi -i "$GPU_ADDRESS" -pm 1; then
        print_status "error" "Failed to set persistence mode"
        return 1
    fi
    
    print_status "info" "Draining GPU at $GPU_ADDRESS..."
    if sudo nvidia-smi drain -p "$GPU_ADDRESS" -m 1; then
        sleep 1
        if ! check_gpu_status; then
            print_status "success" "GPU successfully turned OFF"
        else
            print_status "error" "GPU appears to still be ON"
            return 1
        fi
    else
        print_status "error" "Failed to drain GPU"
        return 1
    fi
}

# Main script logic
case "$1" in
    "on")
        turn_on
        ;;
    "off")
        turn_off
        ;;
    "")
        show_explainer
        ;;
    *)
        echo -e "${RED}${BOLD}Invalid command:${NC} $1"
        echo -e "${YELLOW}Usage:${NC} $0 [on|off]"
        echo ""
        echo -e "Run ${GREEN}$0${NC} without arguments for help"
        exit 1
        ;;
esac

exit $?